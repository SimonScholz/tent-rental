{"version":3,"sources":["assets/tent-lampignons.png","assets/impression1.jpeg","assets/impression2.jpeg","assets/impression3.jpeg","components/HomeJumbotron.tsx","components/PriceCard.tsx","components/pages/Home.tsx","components/pages/About.tsx","components/pages/Request.tsx","components/Navbar.tsx","components/pages/Faq.tsx","components/Calendar/events.ts","components/Calendar/BasicCalendar.tsx","components/pages/Calendar.tsx","components/pages/Impressions.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Styles","styled","div","tentImg","HomeJumbotron","Jumbotron","className","to","Button","variant","PriceCard","props","name","price","currency","items","Container","Card","Body","map","item","i","key","Home","Fragment","Row","Col","About","Requests","Form","Group","controlId","Label","Control","type","placeholder","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","Faq","Accordion","defaultActiveKey","Header","as","eventKey","Date","title","start","end","ColoredDateCellWrapper","children","React","cloneElement","Children","only","style","backgroundColor","BasicCalendar","localizer","views","month","events","step","showMultiDayTimes","defaultDate","components","timeSlotWrapper","messages","today","previous","next","min","Calendar","moment","locale","console","log","momentLocalizer","Impressions","useState","Carousel","Item","src","imp1","alt","Caption","imp2","imp3","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dcf8ba87.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tent-lampignons.06b35cbb.png\";","module.exports = __webpack_public_path__ + \"static/media/impression1.2810ba82.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/impression2.83af1e25.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/impression3.49cd630d.jpeg\";","import React from \"react\";\r\nimport { Jumbotron, Button } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\nimport tentImg from \"../assets/tent-lampignons.png\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst Styles = styled.div`\r\n  .jumbo {\r\n    background: url(${tentImg}) no-repeat;\r\n    background-size: cover;\r\n    color: #000;\r\n  }\r\n`;\r\n\r\nconst HomeJumbotron = () => (\r\n  <Styles>\r\n    <Jumbotron className=\"jumbo\">\r\n      <h2>Hallo, Zeltfest-, Gartenfest-Liebhaber!</h2>\r\n      <p>\r\n        Bei uns können sie im Bereich Flensburg preiswert Zelte und\r\n        Party-Equipment mieten.\r\n      </p>\r\n      <p>\r\n        <LinkContainer to=\"/request\">\r\n          <Button variant=\"info\">Wünschtermin anmelden!</Button>\r\n        </LinkContainer>\r\n      </p>\r\n    </Jumbotron>\r\n  </Styles>\r\n);\r\n\r\nexport default HomeJumbotron;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Card, Container, Button } from \"react-bootstrap\";\r\n\r\nconst Styles = styled.div`\r\n  .pricing .card {\r\n    border: none;\r\n    border-radius: 1rem;\r\n    transition: all 0.2s;\r\n    box-shadow: 0 0.5rem 1rem 0 rgba(0, 0, 0, 0.1);\r\n  }\r\n\r\n  .pricing hr {\r\n    margin: 1.5rem 0;\r\n  }\r\n\r\n  .pricing .card-title {\r\n    margin: 0.5rem 0;\r\n    font-size: 0.9rem;\r\n    letter-spacing: 0.1rem;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .pricing .card-price {\r\n    font-size: 3rem;\r\n    margin: 0;\r\n  }\r\n\r\n  .pricing .card-price .period {\r\n    font-size: 0.8rem;\r\n  }\r\n\r\n  .pricing ul li {\r\n    margin-bottom: 1rem;\r\n  }\r\n\r\n  .pricing .text-muted {\r\n    opacity: 0.7;\r\n  }\r\n\r\n  .pricing .btn {\r\n    font-size: 80%;\r\n    border-radius: 5rem;\r\n    letter-spacing: 0.1rem;\r\n    font-weight: bold;\r\n    padding: 1rem;\r\n    opacity: 0.7;\r\n    transition: all 0.2s;\r\n  }\r\n\r\n  /* Hover Effects on Card */\r\n  @media (min-width: 992px) {\r\n    .pricing .card:hover {\r\n      margin-top: -0.25rem;\r\n      margin-bottom: 0.25rem;\r\n      box-shadow: 0 0.5rem 1rem 0 rgba(0, 0, 0, 0.3);\r\n    }\r\n    .pricing .card:hover .btn {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface PriceCardProps {\r\n  name: string;\r\n  price: number;\r\n  currency?: string;\r\n  items: Array<String>;\r\n}\r\n\r\nconst PriceCard: React.FC<PriceCardProps> = props => {\r\n  const { name, price, currency = \"€\", items } = props;\r\n\r\n  return (\r\n    <Styles>\r\n      <Container className=\"pricing\">\r\n        <Card className=\"mb-5 mb-lg-0\">\r\n          <Card.Body>\r\n            <h5 className=\"card-title text-muted text-uppercase text-center\">\r\n              {name}\r\n            </h5>\r\n            <h6 className=\"card-price text-center\">\r\n              {price} {currency}\r\n            </h6>\r\n            <hr />\r\n            <ul className=\"fa-ul\">\r\n              {items.map((item, i) => (\r\n                <li key={i}>\r\n                  <span className=\"fa-li\">\r\n                    <i className=\"fas fa-check\" />\r\n                  </span>\r\n                  {item}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <LinkContainer to=\"/request\">\r\n              <Button className=\"btn btn-block btn-info text-uppercase\">\r\n                Buchen\r\n              </Button>\r\n            </LinkContainer>\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n    </Styles>\r\n  );\r\n};\r\n\r\nexport default PriceCard;\r\n","import React from \"react\";\r\nimport HomeJumbotron from \"../HomeJumbotron\";\r\nimport PriceCard from \"../PriceCard\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nconst Home: React.FC = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <HomeJumbotron />\r\n      <Row>\r\n        <Col className=\"lg-4 xs-12 sm-12 md-12\">\r\n          <PriceCard\r\n            price={500}\r\n            name=\"Paket S\"\r\n            items={[\"Aufbau\", \"Abbau\", \"Tische\", \"Stühle\", \"10 qm Zelt\"]}\r\n          />\r\n        </Col>\r\n        <Col className=\"lg-4 xs-12 sm-12 md-12\">\r\n          <PriceCard\r\n            price={1000}\r\n            name=\"Paket M\"\r\n            items={[\"Aufbau\", \"Abbau\", \"Tische\", \"Stühle\", \"20 qm Zelt\"]}\r\n          />\r\n        </Col>\r\n        <Col className=\"lg-4 xs-12 sm-12 md-12\">\r\n          <PriceCard\r\n            price={1500}\r\n            name=\"Paket L\"\r\n            items={[\"Aufbau\", \"Abbau\", \"Tische\", \"Stühle\", \"30 qm Zelt\"]}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nconst About: React.FC = () => {\r\n  return (\r\n    <Container className=\"mt-3\">\r\n      <h2>Über uns</h2>\r\n      <p>Hallo, wir sind Dennis und Angy.</p>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { Button, Form, Container } from \"react-bootstrap\";\r\n\r\nconst Requests: React.FC = () => {\r\n  return (\r\n    <Container className=\"mt-3\">\r\n      <h2>Buchen</h2>\r\n      <Form>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Name\" />\r\n          <Form.Label>Email Addresse</Form.Label>\r\n          <Form.Control type=\"email\" placeholder=\"Email\" />\r\n          <Form.Label>Telefon Nummer</Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Telefon Nr. (Optional)\" />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"info\" type=\"submit\">\r\n          Absenden\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Requests;\r\n","import React from \"react\";\r\nimport { Navbar as NBar, Nav } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst Navbar: React.FC = () => {\r\n  return (\r\n    <NBar bg=\"info\" expand=\"lg\" className=\"navbar-dark\">\r\n      <LinkContainer to=\"/\">\r\n        <NBar.Brand>Zeltverleih Ohlsen</NBar.Brand>\r\n      </LinkContainer>\r\n      <NBar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <NBar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"ml-auto\">\r\n          <LinkContainer to=\"/\">\r\n            <Nav.Link>Home</Nav.Link>\r\n          </LinkContainer>\r\n          <LinkContainer to=\"/impressions\">\r\n            <Nav.Link>Impressionen</Nav.Link>\r\n          </LinkContainer>\r\n          <LinkContainer to=\"/calendar\">\r\n            <Nav.Link>Kalender</Nav.Link>\r\n          </LinkContainer>\r\n          <LinkContainer to=\"/request\">\r\n            <Nav.Link>Buchen</Nav.Link>\r\n          </LinkContainer>\r\n          <LinkContainer to=\"/about\">\r\n            <Nav.Link>Über uns</Nav.Link>\r\n          </LinkContainer>\r\n          <LinkContainer to=\"/faq\">\r\n            <Nav.Link>FAQ</Nav.Link>\r\n          </LinkContainer>\r\n        </Nav>\r\n      </NBar.Collapse>\r\n    </NBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { Container, Accordion, Card, Button } from \"react-bootstrap\";\r\n\r\nconst Faq: React.FC = () => {\r\n  return (\r\n    <Container className=\"mt-3\">\r\n      <h2 className=\"mb-3\">Häufig gestellte Fragen</h2>\r\n      <Accordion defaultActiveKey=\"0\">\r\n        <Card>\r\n          <Card.Header>\r\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n              Wie lange dauert der Aufbau?\r\n            </Accordion.Toggle>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"0\">\r\n            <Card.Body>\r\n              Es dauert etwa 1 - 3 Tage das Zelt + Eqiupment aufzubauen.\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n        <Card>\r\n          <Card.Header>\r\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n              Wie lange kann ich stornieren?\r\n            </Accordion.Toggle>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"1\">\r\n            <Card.Body>\r\n              Es ist möglich maximal 2 Wochen vorher zu stonieren. Bei\r\n              kurzfristigeren Stonierungen wird eine Gebühr fällig.\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n        <Card>\r\n          <Card.Header>\r\n            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\">\r\n              Wie viel vorlauf brauchen wir?\r\n            </Accordion.Toggle>\r\n          </Card.Header>\r\n          <Accordion.Collapse eventKey=\"2\">\r\n            <Card.Body>\r\n              Wir versuchen so kurzfristig wie möglich reagieren zu können.\r\n              Allerdings können wir dies nur 3 Monate im Vorraus garantieren.\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n      </Accordion>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Faq;\r\n","const now = new Date();\r\n\r\nexport default [\r\n  {\r\n    id: 2,\r\n    title: \"Gebucht!\",\r\n    start: new Date(2019, 7, 24, 0, 0, 0),\r\n    end: new Date(2019, 7, 25, 24, 0, 0)\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Gebucht!\",\r\n    start: new Date(2019, 7, 17, 0, 0, 0),\r\n    end: new Date(2019, 7, 18, 24, 0, 0)\r\n  }\r\n];\r\n","import React from \"react\";\r\nimport { Calendar, DateLocalizer } from \"react-big-calendar\";\r\nimport events from \"./events\";\r\nimport styled from \"styled-components\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\n\r\nconst Styles = styled.div`\r\n  .min-height {\r\n    height: 70vh;\r\n  }\r\n`;\r\n\r\ninterface BasicCalendarProps {\r\n  localizer: DateLocalizer;\r\n}\r\n\r\nconst ColoredDateCellWrapper = ({ children }: any) =>\r\n  React.cloneElement(React.Children.only(children), {\r\n    style: {\r\n      backgroundColor: \"info\"\r\n    }\r\n  });\r\n\r\nconst BasicCalendar: React.FC<BasicCalendarProps> = props => {\r\n  const { localizer } = props;\r\n  return (\r\n    <Styles>\r\n      <Calendar\r\n        views={{ month: true }}\r\n        events={events}\r\n        step={60}\r\n        showMultiDayTimes\r\n        defaultDate={new Date()}\r\n        components={{\r\n          timeSlotWrapper: ColoredDateCellWrapper\r\n        }}\r\n        localizer={localizer}\r\n        messages={{\r\n          today: \"Heute\",\r\n          previous: \"Zurück\",\r\n          next: \"Weiter\",\r\n          month: \"Monat\"\r\n        }}\r\n        className=\"min-height\"\r\n        min={new Date()}\r\n      />\r\n    </Styles>\r\n  );\r\n};\r\n\r\nexport default BasicCalendar;\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport BasicCalendar from \"../Calendar/BasicCalendar\";\r\nimport { momentLocalizer } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/de\";\r\n\r\nconst Calendar: React.FC = () => {\r\n  moment.locale(\"de\");\r\n  console.log(moment.locale);\r\n  const localizer = momentLocalizer(moment);\r\n\r\n  return (\r\n    <Container className=\"mt-3\">\r\n      <h2>Kalender</h2>\r\n      <p>Schauen Sie ob die gewünschten Tage noch frei sind.</p>\r\n      <BasicCalendar localizer={localizer} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","import React, { useState } from \"react\";\r\nimport { Carousel } from \"react-bootstrap\";\r\nimport imp1 from \"../../assets/impression1.jpeg\";\r\nimport imp2 from \"../../assets/impression2.jpeg\";\r\nimport imp3 from \"../../assets/impression3.jpeg\";\r\n\r\nconst Impressions: React.FC = () => {\r\n  const [index, setIndex] = useState(0);\r\n  const [direction, setDirection] = useState(\"next\");\r\n\r\n  const handleSelect = (selectedIndex: number, e: any) => {\r\n    setIndex(selectedIndex);\r\n    setDirection(e.direction);\r\n  };\r\n\r\n  return (\r\n    <Carousel className=\"mt-3\">\r\n      <Carousel.Item>\r\n        <img className=\"d-block w-100\" src={imp1} alt=\"First slide\" />\r\n        <Carousel.Caption>\r\n          <h3>First slide label</h3>\r\n          <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n        <img className=\"d-block w-100\" src={imp2} alt=\"Third slide\" />\r\n\r\n        <Carousel.Caption>\r\n          <h3>Second slide label</h3>\r\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n      <Carousel.Item>\r\n        <img className=\"d-block w-100\" src={imp3} alt=\"Third slide\" />\r\n\r\n        <Carousel.Caption>\r\n          <h3>Third slide label</h3>\r\n          <p>\r\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur.\r\n          </p>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default Impressions;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./components/pages/Home\";\r\nimport About from \"./components/pages/About\";\r\nimport Requests from \"./components/pages/Request\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Faq from \"./components/pages/Faq\";\r\nimport Calendar from \"./components/pages/Calendar\";\r\nimport Impressions from \"./components/pages/Impressions\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Container>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/about\" component={About} />\r\n          <Route exact path=\"/request\" component={Requests} />\r\n          <Route exact path=\"/impressions\" component={Impressions} />\r\n          <Route exact path=\"/faq\" component={Faq} />\r\n          <Route exact path=\"/calendar\" component={Calendar} />\r\n          <Route exact component={Home} />\r\n        </Switch>\r\n      </Container>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}